@model ProblemSetThreeViewModel
@{
    ViewData["Title"] = "Problem Set Three";
}

<h1>@ViewData["Title"]</h1>

<hr/>

<p>
    For Problem Set Three, you will be performing operations on a contact list.
    <ol>
        <li>Use the API to load all contacts. Make sure they loaded in the view.</li>
        <li>Add a new ActionResult to add a new contact to the table.  Make sure it has server-side validation.</li>
        <li>We want to start recording the last name for each contact.  
            <ol>
                <li>Add this property to the Contact.</li>
                <li>Update the Entity Framework Migration to track this new property.</li>
                <li>Update the UI to include this input in the form.</li>
            </ol>
        </li>
        <li> We want to delete contacts that are no longer needed.
            <ol>
                <li>Add the ability to delete a contact in the table.</li>
                <li>Implement the delete functionality within the business logic.</li>
            </ol>
        </li>
    </ol>
</p>


<h3>Add New Contact Form Here</h3>
<form method="post">
    <input asp-for="NewContact.FirstName" />
    <input asp-for="NewContact.Email" />
    <input asp-for="NewContact.PhoneNumber" />


    <input type="submit" />
</form>

<h3>Add Table of Contacts Here</h3>
<table>
        <thead>
            <tr>
                <td>Name</td>
                <td>Email</td>
                <td>Phone</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
</table>
<script>
    $.ajax('https://localhost:44334/api/Contacts',   // request url
    {
        success: function (data, status, xhr) {// success callback function
            console.log(data);
            //$('p').append(data);

    }
});
</script>
